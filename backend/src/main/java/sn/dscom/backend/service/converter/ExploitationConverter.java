package sn.dscom.backend.service.converter;
import sn.dscom.backend.common.dto.ExploitationDTO;
import sn.dscom.backend.common.util.pojo.Transformer;
import sn.dscom.backend.database.entite.ExploitationEntity;

import java.util.Date;

/**
 * Exploitation Converter
 */
public class ExploitationConverter implements Transformer<ExploitationDTO, ExploitationEntity> {

    /**
     * transformation de {@link ExploitationEntity} en {@link ExploitationDTO}
     *
     * @param exploitationEntity l'objet à transformer en {@link ExploitationDTO}
     * @return l'objet {@link ExploitationDTO}
     */
    @Override
    public ExploitationDTO reverse(ExploitationEntity exploitationEntity) {
        //on retourne null si l'objet d'entré est null
        if (exploitationEntity == null) {
            return null;
        }
        return ExploitationDTO.builder()
                .id(exploitationEntity.getId())
                .nom(exploitationEntity.getNom())
                .region(exploitationEntity.getRegion())
                .dateCreation(exploitationEntity.getDateCreation())
                .dateModification(exploitationEntity.getDateModification())
                .build();
    }

    /**
     * transformation de {@link ExploitationDTO} en {@link ExploitationEntity}
     *
     * @param exploitationDTO l'objet à transformer en {@link ExploitationEntity}
     * @return l'objet {@link ExploitationEntity}
     */
    @Override
    public ExploitationEntity transform(ExploitationDTO exploitationDTO) {

        //on retourne null si l'objet d'entré est null
        if (exploitationDTO == null) {
            return null;
        }
        return ExploitationEntity.builder()
                .id(exploitationDTO.getId())
                .nom(exploitationDTO.getNom())
                .region(exploitationDTO.getRegion())
                .dateCreation(exploitationDTO.getId() == null ? new Date() : exploitationDTO.getDateCreation())
                .dateModification(exploitationDTO.getId() == null ? null : new Date())
                .build();
    }
}
