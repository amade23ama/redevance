import { Component, OnInit, ViewChild } from '@angular/core';
import { MatPaginator } from '@angular/material/paginator';
import { MatSort } from '@angular/material/sort';
import { MatTableDataSource } from '@angular/material/table';
import { Exploitation } from 'src/app/core/interfaces/exploitation';
import { ExploitationService } from 'src/app/core/services/exploitation.service';

@Component({
  selector: 'recherche-exploitation',
  templateUrl: './recherche-exploitation.component.html',
  styleUrls: ['./recherche-exploitation.component.css']
})
export class RechercheExploitationComponent  implements OnInit {

  /** la liste des exploitations */
  listExploitations: MatTableDataSource<Exploitation>;

  // La pagination
  @ViewChild(MatPaginator) paginator: MatPaginator;
  @ViewChild(MatSort) sort: MatSort;

  // nombre de ligne par page
  pageSizeOptions: number[] = [5, 10, 20];
  pageSize = 5; // nb ligne par page par défaut

  // les noms des colones
  displayedColumns: string[] = ['Nom', 'Région', 'Date Création', 'Date Modification'];

 /** exploitation Service */
 constructor(private exploitationService: ExploitationService){}

 
 ngOnInit(): void {
   this.exploitationService.getAllExploitations().subscribe();
   this.exploitationService.getCompteurExploitations().subscribe();
   this.exploitationService.getExploitationById(1).subscribe();

   this.exploitationService.exploitations$.subscribe((exploitations) => {
     console.log("les exploitations: ", exploitations);
     //alimentation du tableau
   this.listExploitations = new MatTableDataSource<Exploitation>(exploitations);
   this.listExploitations.paginator=this.paginator;
   this.listExploitations.sort=this.sort;
   })

   this.exploitationService.nbExploitations$.subscribe((nb) => {
     console.log("le nombre de exploitation: ", nb);
   })

   this.exploitationService.exploitationById$.subscribe((nb) => {
     console.log("exploitation by id: ", nb);
   })

   //Suppression exploitation
   //this.exploitationService.supprimerExploitation(2).subscribe();

   // enregistrement
   /*let exploitation = new Exploitation();
   exploitation.id = 2;
   exploitation.dateCreation = new Date();
   exploitation.dateModification = new Date();
   exploitation.localite = "Thies3";
   exploitation.nom = "THIES";
   this.exploitationService.enregistrerExploitation(exploitation).subscribe();*/

 }

 redirect(exploitation: Exploitation) {
   console.log("ertyhjk", exploitation);
 }

}
